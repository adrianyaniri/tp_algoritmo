        -:    0:Source:/home/home/CLionProjects/estructurasDatos/ListaEnlazada/Lista.cpp
        -:    0:Graph:/home/home/CLionProjects/estructurasDatos/cmake-build-debug-coverage/CMakeFiles/estructurasDatos.dir/ListaEnlazada/Lista.cpp.gcno
        -:    0:Data:/home/home/CLionProjects/estructurasDatos/cmake-build-debug-coverage/CMakeFiles/estructurasDatos.dir/ListaEnlazada/Lista.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by home on 9/11/22.
        -:    3://
        -:    4:
        -:    5:#include <iostream>
        -:    6:#include "Lista.h"
        -:    7:
        -:    8:/*
        -:    9: * Post: inserta un nuevo nodo al principio de la lista
        -:   10: * @param dato: dato a insertar
        -:   11: * @param nodo: nodo a insertarTerminal
        -:   12: */
function _ZN5Lista8insertarE4DatoP4Nodo called 0 returned 0% blocks executed 0%
    #####:   13:void Lista::insertar(Dato dato, Nodo *nodo) {
    #####:   14:    if (nodo->siguiente == nullptr){
    %%%%%:   14-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    #####:   15:        nodo->siguiente = new Nodo(dato);
    %%%%%:   15-block  0
la llamada  0 nunca se ejecuta
la llamada  1 nunca se ejecuta
la ramificacion  2 nunca se ejecuta
la ramificacion  3 nunca se ejecuta
    %%%%%:   15-block  1
    $$$$$:   15-block  2
la ramificacion  4 nunca se ejecuta
la ramificacion  5 nunca se ejecuta
    $$$$$:   15-block  3
la llamada  6 nunca se ejecuta
        -:   16:
        -:   17:    } else {
    #####:   18:        insertar(dato, nodo->siguiente);
    %%%%%:   18-block  0
la llamada  0 nunca se ejecuta
        -:   19:    }
    #####:   20:}
    %%%%%:   20-block  0
        -:   21:
        -:   22:/*
        -:   23: * Post: Imprime los datos del nodo actual
        -:   24: * @param nodo: nodo a imprimirTerminales
        -:   25: */
function _ZN5Lista8imprimirEP4Nodo called 0 returned 0% blocks executed 0%
    #####:   26:void Lista::imprimir(Nodo *nodo) {
    #####:   27:    if( nodo != nullptr)
    %%%%%:   27-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
        -:   28:        std::cout<<
    #####:   29:        "Origen: " << nodo->dato.origen << " " <<
    #####:   30:        "Destino: " << nodo->dato.destino << " " <<
    #####:   31:        "Duracion: " << nodo->dato.duracion << " hs" << " " <<
    %%%%%:   31-block  0
la llamada  0 nunca se ejecuta
la llamada  1 nunca se ejecuta
la llamada  2 nunca se ejecuta
la llamada  3 nunca se ejecuta
la llamada  4 nunca se ejecuta
la llamada  5 nunca se ejecuta
la llamada  6 nunca se ejecuta
    #####:   32:        "Precio: " << nodo->dato.precio << std::endl;
la llamada  0 nunca se ejecuta
la llamada  1 nunca se ejecuta
la llamada  2 nunca se ejecuta
la llamada  3 nunca se ejecuta
la llamada  4 nunca se ejecuta
la llamada  5 nunca se ejecuta
    #####:   33:}
        -:   34:
        -:   35:/*
        -:   36: * Post: elimina el nodo de la lista
        -:   37: * @param nodo: nodo a eliminar
        -:   38: * @param dato: dato a eliminarTerminal
        -:   39: */
function _ZN5Lista8eliminarEP4Nodo4Dato called 0 returned 0% blocks executed 0%
    #####:   40:void Lista::eliminar(Nodo *nodo, Dato dato) {
    #####:   41:    if(nodo == nullptr)
    %%%%%:   41-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    #####:   42:        return;
    %%%%%:   42-block  0
        -:   43:
    #####:   44:    if (nodo->dato.id == dato.id && nodo == primero){
    %%%%%:   44-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    %%%%%:   44-block  1
la ramificacion  2 nunca se ejecuta
la ramificacion  3 nunca se ejecuta
    #####:   45:        Nodo *temp = primero;
    #####:   46:        if (primero->siguiente != nullptr)
    %%%%%:   46-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    #####:   47:            primero = primero->siguiente;
    %%%%%:   47-block  0
    #####:   48:            delete temp;
    %%%%%:   48-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    %%%%%:   48-block  1
la llamada  2 nunca se ejecuta
        -:   49:
    #####:   50:        } else {
    %%%%%:   50-block  0
    #####:   51:            primero = nullptr;
        -:   52:
    #####:   53:        return;
    %%%%%:   53-block  0
        -:   54:    }
    #####:   55:    if (nodo->siguiente != nullptr && nodo->siguiente->dato.id == dato.id){
    %%%%%:   55-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    %%%%%:   55-block  1
la ramificacion  2 nunca se ejecuta
la ramificacion  3 nunca se ejecuta
    #####:   56:        if (nodo->siguiente->dato.id == dato.id){
    %%%%%:   56-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    #####:   57:            Nodo *temp = nodo->siguiente;
    #####:   58:            if(nodo->siguiente != nullptr){
    %%%%%:   58-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    #####:   59:                nodo->siguiente = nodo->siguiente->siguiente;
    %%%%%:   59-block  0
        -:   60:            }
    #####:   61:            delete temp;
    %%%%%:   61-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    %%%%%:   61-block  1
la llamada  2 nunca se ejecuta
        -:   62:        };
    #####:   63:    } else {
    %%%%%:   63-block  0
    #####:   64:        eliminar(nodo->siguiente, dato);
    %%%%%:   64-block  0
la llamada  0 nunca se ejecuta
        -:   65:    };
        -:   66:}
        -:   67:
        -:   68:
        -:   69:/*
        -:   70: * Metodos publicos
        -:   71: */
        -:   72:
function _ZN5Lista8insertarE4Dato called 0 returned 0% blocks executed 0%
    #####:   73:void Lista::insertar(Dato dato) {
    #####:   74:    if (primero == nullptr)
    %%%%%:   74-block  0
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    #####:   75:        primero = new Nodo(dato);
    %%%%%:   75-block  0
la llamada  0 nunca se ejecuta
la llamada  1 nunca se ejecuta
la ramificacion  2 nunca se ejecuta
la ramificacion  3 nunca se ejecuta
    %%%%%:   75-block  1
    $$$$$:   75-block  2
la ramificacion  4 nunca se ejecuta
la ramificacion  5 nunca se ejecuta
    $$$$$:   75-block  3
la llamada  6 nunca se ejecuta
        -:   76:    else
    #####:   77:        insertar(dato, primero);
    %%%%%:   77-block  0
la llamada  0 nunca se ejecuta
    #####:   78:    tamanio++;
    #####:   79:}
    %%%%%:   79-block  0
        -:   80:
function _ZN5Lista8eliminarE4Dato called 0 returned 0% blocks executed 0%
    #####:   81:void Lista::eliminar(Dato viaje) {
    #####:   82:    this->eliminar(primero, viaje);
    %%%%%:   82-block  0
la llamada  0 nunca se ejecuta
    #####:   83:    tamanio--;
    #####:   84:}
        -:   85:
        -:   86:
function _ZN5Lista8imprimirEv called 0 returned 0% blocks executed 0%
    #####:   87:void Lista::imprimir() {
    #####:   88:    std::cout << "Lista de viajes"<< std::endl;
    %%%%%:   88-block  0
la llamada  0 nunca se ejecuta
la llamada  1 nunca se ejecuta
    #####:   89:    imprimir(primero);
la llamada  0 nunca se ejecuta
        -:   90:
    #####:   91:}
        -:   92:
        -:   93:// Post: indica si la lista esta vacia
function _ZN5Lista9estaVaciaEv called 0 returned 0% blocks executed 0%
    #####:   94:bool Lista::estaVacia()  {
    #####:   95:    return primero == nullptr;
    %%%%%:   95-block  0
        -:   96:}
        -:   97:
function _ZN5Lista21imprimirListaCompletaEv called 0 returned 0% blocks executed 0%
    #####:   98:void Lista::imprimirListaCompleta() {
    #####:   99:    Nodo *temp = primero;
    #####:  100:    while (temp != nullptr){
    %%%%%:  100-block  0
    %%%%%:  100-block  1
la ramificacion  0 nunca se ejecuta
la ramificacion  1 nunca se ejecuta
    #####:  101:        imprimir(temp);
    %%%%%:  101-block  0
la llamada  0 nunca se ejecuta
    #####:  102:        temp = temp->siguiente;
        -:  103:    }
    #####:  104:}
